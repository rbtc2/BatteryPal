import 'package:flutter/material.dart';
import '../widgets/analysis_tab_widgets.dart';

/// Ï∂©Ï†Ñ Ìå®ÌÑ¥ ÌÉ≠ - ÏùºÏùº Ï∂©Ï†Ñ ÌÉÄÏûÑÎùºÏù∏, Ï∂©Ï†Ñ Î∞©ÏãùÎ≥Ñ ÌÜµÍ≥Ñ, Ï∂©Ï†Ñ ÏÜçÎèÑ Î∂ÑÏÑù
class ChargingPatternsTab extends StatelessWidget {
  final bool isProUser;
  final VoidCallback? onProUpgrade;

  const ChargingPatternsTab({
    super.key,
    required this.isProUser,
    this.onProUpgrade,
  });

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        children: [
          // ÏùºÏùº Ï∂©Ï†Ñ ÌÉÄÏûÑÎùºÏù∏ Ïπ¥Îìú
          AnalysisCard(
            title: 'ÏùºÏùº Ï∂©Ï†Ñ ÌÉÄÏûÑÎùºÏù∏',
            child: _buildChargingTimeline(),
          ),
          const SizedBox(height: 24),

          // Ï∂©Ï†Ñ Î∞©ÏãùÎ≥Ñ ÌÜµÍ≥Ñ Ïπ¥Îìú
          AnalysisCard(
            title: 'Ï∂©Ï†Ñ Î∞©ÏãùÎ≥Ñ ÌÜµÍ≥Ñ',
            showProUpgrade: !isProUser,
            onProUpgrade: onProUpgrade,
            child: _buildChargingMethodStats(),
          ),
          const SizedBox(height: 24),

          // Ï∂©Ï†Ñ ÏÜçÎèÑ Î∂ÑÏÑù Ïπ¥Îìú
          AnalysisCard(
            title: 'Ï∂©Ï†Ñ ÏÜçÎèÑ Î∂ÑÏÑù',
            child: _buildChargingSpeedAnalysis(),
          ),
          const SizedBox(height: 24),

          // ÏãúÍ∞ÑÎåÄÎ≥Ñ Ï∂©Ï†Ñ Ìå®ÌÑ¥ Ïπ¥Îìú
          AnalysisCard(
            title: 'ÏãúÍ∞ÑÎåÄÎ≥Ñ Ï∂©Ï†Ñ Ìå®ÌÑ¥',
            showProUpgrade: !isProUser,
            onProUpgrade: onProUpgrade,
            child: _buildTimeBasedPatterns(),
          ),
          const SizedBox(height: 24),

          // Ï∂©Ï†Ñ Ìö®Ïú®ÏÑ± Ïù∏ÏÇ¨Ïù¥Ìä∏ Ïπ¥Îìú
          AnalysisCard(
            title: 'Ï∂©Ï†Ñ Ìö®Ïú®ÏÑ± Ïù∏ÏÇ¨Ïù¥Ìä∏',
            showProUpgrade: !isProUser,
            onProUpgrade: onProUpgrade,
            child: _buildEfficiencyInsights(),
          ),
        ],
      ),
    );
  }

  Widget _buildChargingTimeline() {
    return Column(
      children: [
        // 24ÏãúÍ∞Ñ ÌÉÄÏûÑÎùºÏù∏ Î∞î Ï∞®Ìä∏
        Builder(
          builder: (context) => Container(
            height: 80,
            width: double.infinity,
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              color: Theme.of(context).colorScheme.surfaceContainerHighest.withValues(alpha: 0.3),
              borderRadius: BorderRadius.circular(12),
              border: Border.all(
                color: Theme.of(context).colorScheme.outline.withValues(alpha: 0.2),
              ),
            ),
            child: Column(
              children: [
                Text(
                  '24ÏãúÍ∞Ñ Ï∂©Ï†Ñ ÌÉÄÏûÑÎùºÏù∏',
                  style: TextStyle(
                    fontSize: 14,
                    fontWeight: FontWeight.bold,
                    color: Theme.of(context).colorScheme.onSurface,
                  ),
                ),
                const SizedBox(height: 12),
                Expanded(
                  child: _buildTimelineBar(),
                ),
              ],
            ),
          ),
        ),
        const SizedBox(height: 16),
        
        // Ï∂©Ï†Ñ ÏÑ∏ÏÖò ÏÉÅÏÑ∏ Ï†ïÎ≥¥
        _buildChargingSessionDetail(
          icon: 'üåô',
          title: 'ÏÉàÎ≤Ω Ï∂©Ï†Ñ (02:15 - 07:00)',
          batteryChange: '15% ‚Üí 100%',
          duration: '4ÏãúÍ∞Ñ 45Î∂Ñ',
          speed: 'Ï†ÄÏÜç(500mA)',
          color: const Color(0xFF94A3B8), // slate-400
        ),
        const SizedBox(height: 12),
        _buildChargingSessionDetail(
          icon: '‚ö°',
          title: 'ÏïÑÏπ® Ï∂©Ï†Ñ (09:00 - 10:15)',
          batteryChange: '25% ‚Üí 85%',
          duration: '1ÏãúÍ∞Ñ 15Î∂Ñ',
          speed: 'Í≥†ÏÜç(2100mA)',
          color: const Color(0xFF6366F1), // indigo-600
        ),
        const SizedBox(height: 12),
        _buildChargingSessionDetail(
          icon: 'üîå',
          title: 'Ï†ÄÎÖÅ Ï∂©Ï†Ñ (18:30 - 19:00)',
          batteryChange: '45% ‚Üí 75%',
          duration: '30Î∂Ñ',
          speed: 'ÏùºÎ∞ò(1000mA)',
          color: const Color(0xFF3B82F6), // blue-500
        ),
      ],
    );
  }

  Widget _buildTimelineBar() {
    return Builder(
      builder: (context) => Container(
        height: 20,
        decoration: BoxDecoration(
          color: Theme.of(context).colorScheme.surfaceContainerHighest,
          borderRadius: BorderRadius.circular(10),
        ),
        child: Stack(
          children: [
            // Î∞∞Í≤Ω Í∑∏Î¶¨Îìú (ÏãúÍ∞Ñ ÌëúÏãú)
            _buildTimeGrid(),
            // Ï∂©Ï†Ñ ÏÑ∏ÏÖò Î∏îÎ°ùÎì§
            _buildChargingBlocks(),
          ],
        ),
      ),
    );
  }

  Widget _buildTimeGrid() {
    return Builder(
      builder: (context) => Row(
        children: List.generate(25, (index) {
          return Expanded(
            child: Container(
              decoration: BoxDecoration(
                border: Border(
                  right: BorderSide(
                    color: Theme.of(context).colorScheme.outline.withValues(alpha: 0.2),
                    width: 0.5,
                  ),
                ),
              ),
              child: Center(
                child: Text(
                  index.toString().padLeft(2, '0'),
                  style: TextStyle(
                    fontSize: 8,
                    color: Theme.of(context).colorScheme.onSurface.withValues(alpha: 0.5),
                  ),
                ),
              ),
            ),
          );
        }),
      ),
    );
  }

  Widget _buildChargingBlocks() {
    return Builder(
      builder: (context) => Stack(
        children: [
          // ÏÉàÎ≤Ω Ï∂©Ï†Ñ (02:15 - 07:00)
          Positioned(
            left: 2.25 * 4.0, // 2ÏãúÍ∞Ñ 15Î∂Ñ = 2.25ÏãúÍ∞Ñ
            child: Container(
              width: (7.0 - 2.25) * 4.0, // 4ÏãúÍ∞Ñ 45Î∂Ñ
              height: 20,
              decoration: BoxDecoration(
                color: const Color(0xFF94A3B8), // slate-400
                borderRadius: BorderRadius.circular(10),
              ),
              child: Center(
                child: Text(
                  '02-07Ïãú',
                  style: const TextStyle(
                    fontSize: 8,
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ),
          ),
          // ÏïÑÏπ® Ï∂©Ï†Ñ (09:00 - 10:15)
          Positioned(
            left: 9.0 * 4.0, // 9ÏãúÍ∞Ñ
            child: Container(
              width: (10.25 - 9.0) * 4.0, // 1ÏãúÍ∞Ñ 15Î∂Ñ
              height: 20,
              decoration: BoxDecoration(
                color: const Color(0xFF6366F1), // indigo-600
                borderRadius: BorderRadius.circular(10),
              ),
              child: Center(
                child: Text(
                  '09-10Ïãú',
                  style: const TextStyle(
                    fontSize: 8,
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ),
          ),
          // Ï†ÄÎÖÅ Ï∂©Ï†Ñ (18:30 - 19:00)
          Positioned(
            left: 18.5 * 4.0, // 18ÏãúÍ∞Ñ 30Î∂Ñ
            child: Container(
              width: (19.0 - 18.5) * 4.0, // 30Î∂Ñ
              height: 20,
              decoration: BoxDecoration(
                color: const Color(0xFF3B82F6), // blue-500
                borderRadius: BorderRadius.circular(10),
              ),
              child: Center(
                child: Text(
                  '18-19Ïãú',
                  style: const TextStyle(
                    fontSize: 8,
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildChargingSessionDetail({
    required String icon,
    required String title,
    required String batteryChange,
    required String duration,
    required String speed,
    required Color color,
  }) {
    return Builder(
      builder: (context) => Container(
        padding: const EdgeInsets.all(16),
        decoration: BoxDecoration(
          color: color.withValues(alpha: 0.1),
          borderRadius: BorderRadius.circular(12),
          border: Border(
            left: BorderSide(
              color: color,
              width: 4,
            ),
          ),
        ),
        child: Row(
          children: [
            Text(
              icon,
              style: const TextStyle(fontSize: 24),
            ),
            const SizedBox(width: 12),
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    title,
                    style: TextStyle(
                      fontSize: 14,
                      fontWeight: FontWeight.bold,
                      color: Theme.of(context).colorScheme.onSurface,
                    ),
                  ),
                  const SizedBox(height: 4),
                  Text(
                    'Î∞∞ÌÑ∞Î¶¨ Î≥ÄÌôî: $batteryChange',
                    style: TextStyle(
                      fontSize: 12,
                      color: Theme.of(context).colorScheme.onSurface.withValues(alpha: 0.7),
                    ),
                  ),
                  const SizedBox(height: 2),
                  Text(
                    'Ï∂©Ï†Ñ ÏãúÍ∞Ñ: $duration',
                    style: TextStyle(
                      fontSize: 12,
                      color: Theme.of(context).colorScheme.onSurface.withValues(alpha: 0.7),
                    ),
                  ),
                  const SizedBox(height: 2),
                  Text(
                    'Ï∂©Ï†Ñ ÏÜçÎèÑ: $speed',
                    style: TextStyle(
                      fontSize: 12,
                      color: Theme.of(context).colorScheme.onSurface.withValues(alpha: 0.7),
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }


  Widget _buildChargingMethodStats() {
    return Column(
      children: [
        Container(
          height: 200,
          width: double.infinity,
          decoration: BoxDecoration(
            color: Colors.grey.withValues(alpha: 0.1),
            borderRadius: BorderRadius.circular(12),
            border: Border.all(
              color: Colors.grey.withValues(alpha: 0.3),
            ),
          ),
          child: Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Icon(
                  Icons.pie_chart,
                  size: 48,
                  color: Colors.grey[400],
                ),
                const SizedBox(height: 16),
                Text(
                  'Ï∂©Ï†Ñ Î∞©ÏãùÎ≥Ñ ÌÜµÍ≥Ñ Ï∞®Ìä∏',
                  style: TextStyle(
                    fontSize: 16,
                    color: Colors.grey[600],
                  ),
                ),
                const SizedBox(height: 8),
                Text(
                  'ProÎ°ú ÏóÖÍ∑∏Î†àÏù¥ÎìúÌïòÎ©¥ ÏÉÅÏÑ∏Ìïú ÌÜµÍ≥ÑÎ•º ÌôïÏù∏Ìï† Ïàò ÏûàÏäµÎãàÎã§',
                  style: TextStyle(
                    fontSize: 12,
                    color: Colors.grey[500],
                  ),
                  textAlign: TextAlign.center,
                ),
              ],
            ),
          ),
        ),
        const SizedBox(height: 16),
        Row(
          children: [
            Expanded(
              child: MetricCard(
                title: 'USB Ï∂©Ï†Ñ',
                value: '45%',
                icon: Icons.usb,
                color: Colors.blue,
              ),
            ),
            const SizedBox(width: 16),
            Expanded(
              child: MetricCard(
                title: 'AC Ï∂©Ï†Ñ',
                value: '35%',
                icon: Icons.power,
                color: Colors.green,
              ),
            ),
          ],
        ),
        const SizedBox(height: 16),
        Row(
          children: [
            Expanded(
              child: MetricCard(
                title: 'Î¨¥ÏÑ† Ï∂©Ï†Ñ',
                value: '20%',
                icon: Icons.wifi,
                color: Colors.orange,
              ),
            ),
            const SizedBox(width: 16),
            Expanded(
              child: MetricCard(
                title: 'Îπ†Î•∏ Ï∂©Ï†Ñ',
                value: '60%',
                icon: Icons.flash_on,
                color: Colors.red,
              ),
            ),
          ],
        ),
      ],
    );
  }

  Widget _buildChargingSpeedAnalysis() {
    return Column(
      children: [
        Row(
          children: [
            Expanded(
              child: MetricCard(
                title: 'Ï¥àÍ≥†ÏÜç Ï∂©Ï†Ñ',
                value: '2Ìöå',
                icon: Icons.flash_on,
                color: Colors.red,
              ),
            ),
            const SizedBox(width: 16),
            Expanded(
              child: MetricCard(
                title: 'Í≥†ÏÜç Ï∂©Ï†Ñ',
                value: '5Ìöå',
                icon: Icons.speed,
                color: Colors.orange,
              ),
            ),
          ],
        ),
        const SizedBox(height: 16),
        Row(
          children: [
            Expanded(
              child: MetricCard(
                title: 'Ï†ïÏÉÅ Ï∂©Ï†Ñ',
                value: '8Ìöå',
                icon: Icons.battery_charging_full,
                color: Colors.green,
              ),
            ),
            const SizedBox(width: 16),
            Expanded(
              child: MetricCard(
                title: 'Ï†ÄÏÜç Ï∂©Ï†Ñ',
                value: '3Ìöå',
                icon: Icons.battery_6_bar,
                color: Colors.blue,
              ),
            ),
          ],
        ),
        const SizedBox(height: 16),
        
        // Ï∂©Ï†Ñ ÏÜçÎèÑÎ≥Ñ ÌèâÍ∑† ÏãúÍ∞Ñ
        Container(
          padding: const EdgeInsets.all(16),
          decoration: BoxDecoration(
            color: Colors.blue.withValues(alpha: 0.1),
            borderRadius: BorderRadius.circular(12),
            border: Border.all(
              color: Colors.blue.withValues(alpha: 0.3),
            ),
          ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'Ï∂©Ï†Ñ ÏÜçÎèÑÎ≥Ñ ÌèâÍ∑† ÏãúÍ∞Ñ',
                style: TextStyle(
                  fontSize: 16,
                  fontWeight: FontWeight.bold,
                  color: Colors.blue[700],
                ),
              ),
              const SizedBox(height: 12),
              _buildSpeedTimeItem('Ï¥àÍ≥†ÏÜç Ï∂©Ï†Ñ', '25Î∂Ñ', Colors.red),
              _buildSpeedTimeItem('Í≥†ÏÜç Ï∂©Ï†Ñ', '45Î∂Ñ', Colors.orange),
              _buildSpeedTimeItem('Ï†ïÏÉÅ Ï∂©Ï†Ñ', '90Î∂Ñ', Colors.green),
              _buildSpeedTimeItem('Ï†ÄÏÜç Ï∂©Ï†Ñ', '180Î∂Ñ', Colors.blue),
            ],
          ),
        ),
      ],
    );
  }

  Widget _buildSpeedTimeItem(String speed, String time, Color color) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 4),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(
            speed,
            style: const TextStyle(fontSize: 14),
          ),
          Text(
            time,
            style: TextStyle(
              fontSize: 14,
              fontWeight: FontWeight.bold,
              color: color,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildTimeBasedPatterns() {
    return Column(
      children: [
        // Ï∂©Ï†Ñ ÏäµÍ¥Ä ÌûàÌä∏Îßµ
        Builder(
          builder: (context) => Container(
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              color: Theme.of(context).colorScheme.surfaceContainerHighest.withValues(alpha: 0.3),
              borderRadius: BorderRadius.circular(12),
              border: Border.all(
                color: Theme.of(context).colorScheme.outline.withValues(alpha: 0.2),
              ),
            ),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  'Ï∂©Ï†Ñ ÏäµÍ¥Ä ÌûàÌä∏Îßµ (Ï£ºÍ∞Ñ)',
                  style: TextStyle(
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                    color: Theme.of(context).colorScheme.onSurface,
                  ),
                ),
                const SizedBox(height: 16),
                _buildHeatmapGrid(),
              ],
            ),
          ),
        ),
        const SizedBox(height: 16),
        
        // Ï∂©Ï†Ñ ÌÜµÍ≥Ñ
        _buildChargingStats(),
      ],
    );
  }

  Widget _buildHeatmapGrid() {
    return Builder(
      builder: (context) => Column(
        children: [
          // ÏöîÏùº Ìó§Îçî
          Row(
            children: [
              const SizedBox(width: 60), // ÏãúÍ∞Ñ ÎùºÎ≤® Í≥µÍ∞Ñ
              ...['Ïõî', 'Ìôî', 'Ïàò', 'Î™©', 'Í∏à', 'ÌÜ†', 'Ïùº'].map((day) => 
                Expanded(
                  child: Center(
                    child: Text(
                      day,
                      style: TextStyle(
                        fontSize: 12,
                        fontWeight: FontWeight.bold,
                        color: Theme.of(context).colorScheme.onSurface,
                      ),
                    ),
                  ),
                ),
              ),
            ],
          ),
          const SizedBox(height: 8),
          // ÌûàÌä∏Îßµ Í∑∏Î¶¨Îìú
          ..._buildHeatmapRows(context),
        ],
      ),
    );
  }

  List<Widget> _buildHeatmapRows(BuildContext context) {
    final timeLabels = ['06Ïãú', '09Ïãú', '12Ïãú', '18Ïãú', '23Ïãú'];
    final timeDescriptions = ['‚Üê Ï∂úÍ∑º Ï†Ñ', '‚Üê Ï∂úÍ∑º Ï§ë', '‚Üê Ï†êÏã¨', '‚Üê Ìá¥Í∑º ÌõÑ', '‚Üê Ï∑®Ïπ® Ï†Ñ'];
    
    // ÏÉòÌîå Îç∞Ïù¥ÌÑ∞: Í∞Å ÏãúÍ∞ÑÎåÄÎ≥ÑÎ°ú Ï∂©Ï†ÑÌïú ÏöîÏùºÎì§
    final heatmapData = [
      [false, false, false, false, false, false, false], // 06Ïãú
      [true, true, false, true, true, false, false],     // 09Ïãú
      [false, false, true, false, false, false, false],  // 12Ïãú
      [true, true, true, true, true, true, true],        // 18Ïãú
      [false, false, false, false, false, false, true],  // 23Ïãú
    ];

    return List.generate(5, (rowIndex) {
      return Padding(
        padding: const EdgeInsets.symmetric(vertical: 2),
        child: Row(
          children: [
            // ÏãúÍ∞Ñ ÎùºÎ≤®
            SizedBox(
              width: 60,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.end,
                children: [
                  Text(
                    timeLabels[rowIndex],
                    style: TextStyle(
                      fontSize: 12,
                      fontWeight: FontWeight.w600,
                      color: Theme.of(context).colorScheme.onSurface,
                    ),
                  ),
                  Text(
                    timeDescriptions[rowIndex],
                    style: TextStyle(
                      fontSize: 10,
                      color: Theme.of(context).colorScheme.onSurface.withValues(alpha: 0.6),
                    ),
                  ),
                ],
              ),
            ),
            const SizedBox(width: 8),
            // ÌûàÌä∏Îßµ ÏÖÄÎì§
            ...List.generate(7, (colIndex) {
              final isCharged = heatmapData[rowIndex][colIndex];
              return Expanded(
                child: Container(
                  height: 24,
                  margin: const EdgeInsets.symmetric(horizontal: 1),
                  decoration: BoxDecoration(
                    color: isCharged 
                        ? Theme.of(context).colorScheme.primary.withValues(alpha: 0.8)
                        : Theme.of(context).colorScheme.surfaceContainerHighest,
                    borderRadius: BorderRadius.circular(4),
                    border: Border.all(
                      color: Theme.of(context).colorScheme.outline.withValues(alpha: 0.2),
                      width: 0.5,
                    ),
                  ),
                  child: Center(
                    child: Text(
                      isCharged ? '‚ñ†' : '‚ñ°',
                      style: TextStyle(
                        fontSize: 12,
                        color: isCharged 
                            ? Colors.white
                            : Theme.of(context).colorScheme.onSurface.withValues(alpha: 0.3),
                      ),
                    ),
                  ),
                ),
              );
            }),
          ],
        ),
      );
    });
  }

  Widget _buildChargingStats() {
    return Builder(
      builder: (context) => Column(
        children: [
          // ÌèâÍ∑† ÏãúÏûë/Ï¢ÖÎ£å
          Container(
            width: double.infinity,
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              color: Colors.blue.withValues(alpha: 0.1),
              borderRadius: BorderRadius.circular(12),
              border: Border.all(
                color: Colors.blue.withValues(alpha: 0.3),
              ),
            ),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  'ÌèâÍ∑† ÏãúÏûë/Ï¢ÖÎ£å',
                  style: TextStyle(
                    fontSize: 14,
                    fontWeight: FontWeight.bold,
                    color: Theme.of(context).colorScheme.onSurface,
                  ),
                ),
                const SizedBox(height: 8),
                Text(
                  'ÌèâÍ∑† ÏãúÏûë: 28% | ÌèâÍ∑† Ï¢ÖÎ£å: 87%',
                  style: TextStyle(
                    fontSize: 12,
                    color: Theme.of(context).colorScheme.onSurface.withValues(alpha: 0.7),
                  ),
                ),
              ],
            ),
          ),
          const SizedBox(height: 12),
          
          // Ï∂©Ï†Ñ ÎπàÎèÑÏôÄ ÌÉÄÏûÖ ÎπÑÏú®
          Row(
            children: [
              Expanded(
                child: Container(
                  padding: const EdgeInsets.all(16),
                  decoration: BoxDecoration(
                    color: Colors.green.withValues(alpha: 0.1),
                    borderRadius: BorderRadius.circular(12),
                    border: Border.all(
                      color: Colors.green.withValues(alpha: 0.3),
                    ),
                  ),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        'Ï∂©Ï†Ñ ÎπàÎèÑ',
                        style: TextStyle(
                          fontSize: 14,
                          fontWeight: FontWeight.bold,
                          color: Theme.of(context).colorScheme.onSurface,
                        ),
                      ),
                      const SizedBox(height: 8),
                      Text(
                        'Ïùº ÌèâÍ∑†: 2.3Ìöå',
                        style: TextStyle(
                          fontSize: 12,
                          color: Theme.of(context).colorScheme.onSurface.withValues(alpha: 0.7),
                        ),
                      ),
                      Text(
                        'Ï£º ÌèâÍ∑†: 16Ìöå',
                        style: TextStyle(
                          fontSize: 12,
                          color: Theme.of(context).colorScheme.onSurface.withValues(alpha: 0.7),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: Container(
                  padding: const EdgeInsets.all(16),
                  decoration: BoxDecoration(
                    color: Colors.orange.withValues(alpha: 0.1),
                    borderRadius: BorderRadius.circular(12),
                    border: Border.all(
                      color: Colors.orange.withValues(alpha: 0.3),
                    ),
                  ),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        'Ï∂©Ï†Ñ ÌÉÄÏûÖ ÎπÑÏú®',
                        style: TextStyle(
                          fontSize: 14,
                          fontWeight: FontWeight.bold,
                          color: Theme.of(context).colorScheme.onSurface,
                        ),
                      ),
                      const SizedBox(height: 8),
                      Text(
                        'Í≥†ÏÜç:ÏùºÎ∞ò:Ï†ÄÏÜç',
                        style: TextStyle(
                          fontSize: 12,
                          color: Theme.of(context).colorScheme.onSurface.withValues(alpha: 0.7),
                        ),
                      ),
                      Text(
                        '= 45:35:20',
                        style: TextStyle(
                          fontSize: 12,
                          fontWeight: FontWeight.bold,
                          color: Theme.of(context).colorScheme.onSurface,
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildEfficiencyInsights() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        _buildInsightItem(
          icon: Icons.trending_up,
          title: 'AC Ï∂©Ï†ÑÏùò Ìö®Ïú®ÏÑ±Ïù¥ Î¨¥ÏÑ† Ï∂©Ï†ÑÎ≥¥Îã§ 15% ÎÜíÏäµÎãàÎã§',
          color: Colors.green,
        ),
        const SizedBox(height: 12),
        _buildInsightItem(
          icon: Icons.schedule,
          title: 'Ïò§ÌõÑ 2-4Ïãú Ï∂©Ï†ÑÏù¥ Í∞ÄÏû• Ìö®Ïú®Ï†ÅÏûÖÎãàÎã§',
          color: Colors.blue,
        ),
        const SizedBox(height: 12),
        _buildInsightItem(
          icon: Icons.warning,
          title: 'ÏïºÍ∞Ñ Ï∂©Ï†ÑÏùÄ Î∞∞ÌÑ∞Î¶¨ ÏàòÎ™ÖÏóê ÏòÅÌñ•ÏùÑ Ï§Ñ Ïàò ÏûàÏäµÎãàÎã§',
          color: Colors.orange,
        ),
        const SizedBox(height: 12),
        _buildInsightItem(
          icon: Icons.lightbulb,
          title: '80% Ïù¥ÏÉÅ Ï∂©Ï†Ñ Ïãú Ìö®Ïú®ÏÑ±Ïù¥ ÌÅ¨Í≤å Í∞êÏÜåÌï©ÎãàÎã§',
          color: Colors.red,
        ),
        if (!isProUser) ...[
          const SizedBox(height: 16),
          Container(
            padding: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: Colors.blue.withValues(alpha: 0.1),
              borderRadius: BorderRadius.circular(8),
              border: Border.all(
                color: Colors.blue.withValues(alpha: 0.3),
              ),
            ),
            child: Row(
              children: [
                Icon(
                  Icons.info_outline,
                  color: Colors.blue,
                  size: 20,
                ),
                const SizedBox(width: 8),
                Expanded(
                  child: Text(
                    'ProÎ°ú ÏóÖÍ∑∏Î†àÏù¥ÎìúÌïòÎ©¥ Îçî ÏûêÏÑ∏Ìïú Ìö®Ïú®ÏÑ± Î∂ÑÏÑùÏùÑ ÌôïÏù∏Ìï† Ïàò ÏûàÏäµÎãàÎã§',
                    style: TextStyle(
                      color: Colors.blue[700],
                      fontSize: 12,
                    ),
                  ),
                ),
              ],
            ),
          ),
        ],
      ],
    );
  }

  Widget _buildInsightItem({
    required IconData icon,
    required String title,
    required Color color,
  }) {
    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Icon(
          icon,
          color: color,
          size: 20,
        ),
        const SizedBox(width: 12),
        Expanded(
          child: Text(
            title,
            style: const TextStyle(
              fontSize: 14,
              height: 1.4,
            ),
          ),
        ),
      ],
    );
  }
}
